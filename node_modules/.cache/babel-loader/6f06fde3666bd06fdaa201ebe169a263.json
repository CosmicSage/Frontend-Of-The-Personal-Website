{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from \"isomorphic-unfetch\";\n\nvar Index = function Index(props) {\n  console.log(\"\\x1B[36mits fucked props.rubish\\x1B[0m\", props.shows);\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, \"Batman TV Shows\"), React.createElement(\"ul\", null, props.shows.map(function (show) {\n    return React.createElement(\"li\", {\n      key: show.id\n    }, React.createElement(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/post?id=\".concat(show.id)\n    }, React.createElement(\"a\", null, show.name)));\n  })));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var response, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length), Date());\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["/mnt/d/Projects/hello-next/pages/index.js"],"names":["Layout","Link","fetch","Index","props","console","log","shows","map","show","id","name","getInitialProps","response","json","data","length","Date","entry"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,2CAAqDF,KAAK,CAACG,KAA3D;AACA,SACA,oBAAC,MAAD,QACE,kDADF,EAEE,gCACGH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAd,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAR;AAA2B,MAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB;AAA/B,OACE,+BAAID,IAAI,CAACE,IAAT,CADF,CADF,CADmB;AAAA,GAApB,CADH,CAFF,CADA;AAaA,CAfF;;AAiBAR,KAAK,CAACS,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACCV,KAAK,CAAC,8CAAD,CADN;;AAAA;AAChBW,UAAAA,QADgB;AAAA;AAAA,iBAEHA,QAAQ,CAACC,IAAT,EAFG;;AAAA;AAEhBC,UAAAA,IAFgB;AAItBV,UAAAA,OAAO,CAACC,GAAR,qCAAyCS,IAAI,CAACC,MAA9C,GAAwDC,IAAI,EAA5D;AAJsB,2CAMf;AACLV,YAAAA,KAAK,EAAEQ,IAAI,CAACP,GAAL,CAAS,UAAAU,KAAK;AAAA,qBAAIA,KAAK,CAACT,IAAV;AAAA,aAAd;AADF,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAWA,eAAeN,KAAf","sourcesContent":["import Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = (props) => {\n  console.log(`\\x1b[36mits fucked props.rubish\\x1b[0m`,props.shows);\n  return (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.shows.map(show => (\n        <li key={show.id}>\n          <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n)}\n\nIndex.getInitialProps = async function() {\n  const response = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n  const data = await response.json()\n\n  console.log(`Show data fetched. Count: ${data.length}`, Date());\n\n  return {\n    shows: data.map(entry => entry.show)\n  }\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}